using System;
using System.Collections.Generic;
using WebExpress.WebCore.WebApplication;
using WebExpress.WebCore.WebComponent;
using WebExpress.WebCore.WebMessage;

namespace WebExpress.WebCore.WebEndpoint
{
    /// <summary>
    /// Represents a endpoint manager.
    /// </summary>
    public interface IEndpointManager : IComponentManager
    {
        /// <summary>
        /// Returns all endpoints contexts.
        /// </summary>
        IEnumerable<IEndpointContext> Endpoints { get; }

        /// <summary>
        /// Registers an endpoint context type.
        /// </summary>
        /// <typeparam name="T">The type of the endpoint context.</typeparam>
        /// <param name="registration">The registration details containing the callback functions.</param>
        void Register<T>(EndpointRegistration registration) where T : IEndpointContext;

        /// <summary>
        /// Removes the registration for a specific endpoint context type.
        /// </summary>
        /// <typeparam name="T">The type of the endpoint context.</typeparam>
        void Remove<T>() where T : IEndpointContext;

        /// <summary>
        /// Returns an enumeration of endpoint contexts.
        /// </summary>
        /// <param name="endpointType">The endpoint type.</param>
        /// <param name="applicationContext">The application context.</param>
        /// <returns>An enumeration of endpoint contexts.</returns>
        IEnumerable<IEndpointContext> GetEndpoints(Type endpointType, IApplicationContext applicationContext = null);

        ///// <summary>
        ///// Creates a new instance or if caching is active, a possibly existing instance is returned.
        ///// </summary>
        ///// <param name="endpointContext">The endpoint context.</param>
        ///// <param name="uri">The uri.</param>
        ///// <param name="searchContext">The search context.</param>
        ///// <returns>The created endpoint.</returns>
        //IEndpoint CreateEndpoint(IEndpointContext endpointContext, UriResource uri, SearchContext searchContext);

        /// <summary>
        /// Handles a request and returns a response.
        /// </summary>
        /// <param name="request">The request to handle.</param>
        /// <param name="endpointContext">The context of the endpoint handling the request.</param>
        /// <returns>The response generated by the endpoint.</returns>
        Response HandleRequest(Request request, IEndpointContext endpointContext);
    }
}
